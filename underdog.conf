# This file can include comments using # or #
# Commets can be included at the start or end of a line i.e. they can appear after a configuration parameter is set
# All parameters are set using a key and a value separated by an equals sign and optional spaces

# This is the IP address we listen on for new queries
# Use 0.0.0.0 to listen on all interfaces
listenIp        = 0.0.0.0

# Any requests not destined for an instance are proxied on to the correct port
# we might want to connect to a different IP for these internally proxied queries
# e.g. localcost
# If no proxyIp is specified then this defaults to the listenIp
# The most likely use case for this is if listenIp=0.0.0.0 - in which case you
#   probably want proxyIp to be 127.0.0.1
proxyIp         = 127.0.0.1

# The first port we start listening on
basePort        = 16000

# Number of instances of Underdog to run on this server. This should be equal to the number of cores
# There is no real benefit to running more that I can think of
# Each instance will listen on the next port up starting from basePort
# If not specified then this will default to the number of processors.
# instances       = 2

# This is the period used to measure the last activity for a hash - it should be
#   longer than maxAge+tidyUpInterval.
# We use this to cut down the number of bytes required to store the time at which
#   we last saw any hash - rather than recording unxitime we record (unixtime mod timeChunk)
timeChunk       = 7200 # Seconds

# This is the size of the log of all hashes
# Making this larger makes it harder for an attacker to flush the log
#   but consumes more memory
# When the record log is full the oldest entries will be deleted
#   to make room - whether they have expired or not
# Remember that each instance has its own log so the total capacity (and memory requirement)
#   will be this multiplied by the number of instances
numRecords      = 1048576

# This is the threshold for blocking. If we see this many attempts for the same hash
#   then we will return "BLOCK"
maxCount        = 50

# This is the time period for which we have to see no attempts
#   before we forget about this hash. You might think of it as the "lockout time"
# Any new attempt during this period will cause it to be reset i.e. if
#   a hash has has been locked for an hour and they try again on the 59th minute
#   it will be blocked and locked for a whole extra hour
maxAge          = 1800 # Half an hour

# How often we check to purge old records from the end of the log
# This is not a costly process and should be fairly frequent e.g. <5 mins (300 seconds)
tidyUpInterval  = 60 # A minute

# This defines how often the stats are recalculated
# Calculation of stats does not affect the behaviour in any way
# It is purely to provide data when the STATS command is received
statsUpdateInterval = 60

debug           = false
